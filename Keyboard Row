https://leetcode.com/problems/keyboard-row/description/

class Solution:
    def findWords(self, words: List[str]) -> List[str]:
        kb_row_1 = "qwertyuiop"
        kb_row_2 = "asdfghjkl"
        kb_row_3 = "zxcvbnm"

        final_list = []

        for w in words:
            row_1_word = ''.join([i for i in w.lower() if i in kb_row_1])
            row_2_word = ''.join([i for i in w.lower() if i in kb_row_2])
            row_3_word = ''.join([i for i in w.lower() if i in kb_row_3])

            # Append only if the word entirely matches one of the rows
            if row_1_word == w.lower() or row_2_word == w.lower() or row_3_word == w.lower():
                final_list.append(w)

        res = []

        res = final_list

        return res

(though a much neater solution is given below)

class Solution:
    def findWords(self, words: List[str]) -> List[str]:

        urow = set('qwertyuiop')
        mrow = set('asdfghhjkl')
        lrow = set('zxcvbnm')

        out_words = []

        for word in words:
            word_set = set(word.lower())
            if word_set.issubset(urow) or word_set.issubset(mrow) or word_set.issubset(lrow):
                out_words.append(word)

        return out_words
